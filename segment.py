"""function that takes in a jpeg and segments out a piece of it
the object will be placed on a colored photo with qr code on the corners"""
import cv2
import numpy as np



def segment(image):
    image = image.copy()

    # init mask and rect, rect is an estimate of a bounding box
    mask = np.zeros(image.shape[:2], dtype="uint8")
    rect = (90, 30, 160, 160)

    # allocate 'snakes' that hold segmentation image
    fg_model = np.zeros((1, 65), dtype="float")
    bg_model = np.zeros((1, 65), dtype="float")

    # preform grab cut
    mask, bg_model, fg_model = cv2.grabCut(image, 
        mask, 
        rect, 
        bg_model,
        fg_model, 
        iterCount = 300,
        mode = cv2.GC_INIT_WITH_RECT)

    output_mask = np.where((mask == cv2.GC_PR_BGD) | (mask == cv2.GC_BGD), 0, 1)
    # scale the mask from the range [0, 1] to [0, 255]
    output_mask = (output_mask * 255).astype("uint8")
    # apply a bitwise AND to the image using our mask generated by
    # GrabCut to generate our final output image
    output = cv2.bitwise_and(image, image, mask=output_mask)
    
    return output


if __name__ == '__main__':
    image = cv2.imread('/mnt/c/Users/14135/Desktop/SDP-Training-Pipe/marvel.jpg')    

    output = segment(image = image)

    cv2.imshow('image', output)

    cv2.waitKey(0)
    import time 
    time.sleep(100)

    cv2.destroyAllWindows()